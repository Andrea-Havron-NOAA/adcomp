var searchData=
[
  ['tabulate',['tabulate',['../structTMBad_1_1sequential__reduction.html#ab7f1dcb61e1e5fca346d0c1059b9d8da',1,'TMBad::sequential_reduction']]],
  ['tag',['Tag',['../namespacenewton.html#a608c05d3a8c75dbc24b8d94b09c670be',1,'newton::Tag(const TMBad::ad_plain &amp;x)'],['../namespacenewton.html#a051ecc01764bc533a02b70b06054b845',1,'newton::Tag(const TMBad::Scalar &amp;x)']]],
  ['test_5fperiod',['test_period',['../structTMBad_1_1periodic.html#ae70d3e174b4f0909820d7a95e901aa20',1,'TMBad::periodic']]],
  ['tmb_5fatomic_5fstatic_5ffunction',['TMB_ATOMIC_STATIC_FUNCTION',['../namespaceatomic.html#aab4fa812a522e0eccb59e88dd89dd18d',1,'atomic::TMB_ATOMIC_STATIC_FUNCTION(pnorm1, 1, ty[0]=Rmath::Rf_pnorm5(tx[0], 0, 1, 1, 0);, px[0]=dnorm1(tx[0]) *py[0];) TMB_ATOMIC_STATIC_FUNCTION(qnorm1'],['../namespaceatomic.html#a67f82fc0d0a030e53d136a6a14c804f1',1,'atomic::TMB_ATOMIC_STATIC_FUNCTION(D_incpl_gamma_shape, 4, ty[0]=Rmath::D_incpl_gamma_shape(tx[0], tx[1], tx[2], tx[3]);, px[0]=exp(-tx[0]+(tx[1]-Type(1.0)) *log(tx[0])+tx[3]) *pow(log(tx[0]), tx[2]) *py[0];Type tx_[4];tx_[0]=tx[0];tx_[1]=tx[1];tx_[2]=tx[2]+Type(1.0);tx_[3]=tx[3];px[1]=D_incpl_gamma_shape(tx_) *py[0];px[2]=Type(0);px[3]=ty[0] *py[0];) TMB_ATOMIC_STATIC_FUNCTION(inv_incpl_gamma'],['../namespaceatomic.html#a8a5be1ffa66c34b67111f343e47fb3c9',1,'atomic::TMB_ATOMIC_STATIC_FUNCTION(D_lgamma, 2, ty[0]=Rmath::D_lgamma(tx[0], tx[1]);, Type tx_[2];tx_[0]=tx[0];tx_[1]=tx[1]+Type(1.0);px[0]=D_lgamma(tx_) *py[0];px[1]=Type(0);) TMB_ATOMIC_STATIC_FUNCTION(ppois'],['../namespaceatomic.html#a80e546d4694a98ec59a15242d520df38',1,'atomic::TMB_ATOMIC_STATIC_FUNCTION(bessel_k_10, 2, ty[0]=Rmath::Rf_bessel_k(tx[0], tx[1], 1.0);, Type value=ty[0];Type x=tx[0];Type nu=tx[1];Type arg[2];arg[0]=x;arg[1]=nu+Type(1);px[0]=(-bessel_k_10(arg)+value *(nu/x)) *py[0];px[1]=Type(0);) TMB_ATOMIC_STATIC_FUNCTION(bessel_i_10']]],
  ['tmb_5fatomic_5fvector_5ffunction',['TMB_ATOMIC_VECTOR_FUNCTION',['../namespaceatomic.html#af9f02597375de42ca19bcaeff3190938',1,'atomic::TMB_ATOMIC_VECTOR_FUNCTION(matmul, CppAD::Integer(tx[0]) *CppAD::Integer(tx[1]), typedef TypeDefs&lt; double &gt;::MapMatrix MapMatrix_t;typedef TypeDefs&lt; double &gt;::ConstMapMatrix ConstMapMatrix_t;int n1=CppAD::Integer(tx[0]);int n3=CppAD::Integer(tx[1]);int n2=(n1+n3 &gt; 0 ?(tx.size() - 2)/(n1+n3) :0);ConstMapMatrix_t X(&amp;tx[2], n1, n2);ConstMapMatrix_t Y(&amp;tx[2+n1 *n2], n2, n3);MapMatrix_t Z(&amp;ty[0], n1, n3);Z=X *Y;, typedef typename TypeDefs&lt; Type &gt;::MapMatrix MapMatrix_t;int n1=CppAD::Integer(tx[0]);int n3=CppAD::Integer(tx[1]);int n2=(n1+n3 &gt; 0 ?(tx.size() - 2)/(n1+n3) :0);matrix&lt; Type &gt; Xt=vec2mat(tx, n1, n2, 2).transpose();matrix&lt; Type &gt; Yt=vec2mat(tx, n2, n3, 2+n1 *n2).transpose();matrix&lt; Type &gt; W=vec2mat(py, n1, n3);MapMatrix_t res1(&amp;px[2], n1, n2);MapMatrix_t res2(&amp;px[2+n1 *n2], n2, n3);res1=matmul(W, Yt);res2=matmul(Xt, W);px[0]=0;px[1]=0;) TMB_ATOMIC_VECTOR_FUNCTION(matinv'],['../namespaceatomic.html#a7215bba00f5e746637c35e56e66be2cf',1,'atomic::TMB_ATOMIC_VECTOR_FUNCTION(logdet, 1, int n=sqrt((double) tx.size());matrix&lt; double &gt; X=vec2mat(tx, n, n);matrix&lt; double &gt; LU=X.lu().matrixLU();vector&lt; double &gt; LUdiag=LU.diagonal();double res=LUdiag.abs().log().sum();ty[0]=res;, CppAD::vector&lt; Type &gt; invX=matinv(tx);for(size_t i=0;i&lt; tx.size();i++) px[i]=invX[i] *py[0];) TMB_ATOMIC_VECTOR_FUNCTION(invpd']]],
  ['transpose',['transpose',['../structarray.html#a9f0df57cc5403f71194f2159ec80bd66',1,'array::transpose()'],['../structtmbutils_1_1array.html#a25f546d435692cbc7da96d568e51d050',1,'tmbutils::array::transpose()']]]
];
